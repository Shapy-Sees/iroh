# File: iroh/config/dtmf_commands.yml
# DTMF command configuration for the Iroh Home Management System
# Defines states and handlers for phone input processing

# Global settings
settings:
  default_timeout: 5000  # ms to wait between digits
  require_hash_termination: true
  announce_on_pickup: true

# State definitions
states:
  initial:
    description: "Initial state waiting for command input"
    timeout: 5000
    on_enter: ["announce_ready"]
    on_timeout: "idle"
    on_invalid: "error"
    handlers:
      # Timer command
      - type: "pattern"
        pattern: "[0-9]+"
        description: "Create a timer for specified minutes"
        terminator: "#"
        action:
          handler: "timer_manager.create_timer"
          transform: "minutes_from_digits"
        next_state: "initial"
      
      # Light control commands
      - type: "pattern"
        pattern: "\\*1"
        description: "Turn all lights on"
        terminator: "#"
        action:
          handler: "home_assistant.lights_on"
          args:
            entity: "group.all_lights"
        next_state: "initial"
        
      - type: "pattern"
        pattern: "\\*0"
        description: "Turn all lights off"
        terminator: "#"
        action:
          handler: "home_assistant.lights_off"
          args:
            entity: "group.all_lights"
        next_state: "initial"
      
      # Temperature control
      - type: "pattern"
        pattern: "\\*2[0-9]{2}"
        description: "Set thermostat temperature"
        terminator: "#"
        action:
          handler: "home_assistant.set_temperature"
          args:
            entity: "climate.thermostat"
            transform: "temperature_from_digits"
        next_state: "initial"

  idle:
    description: "Idle state after timeout"
    timeout: 10000
    on_enter: ["play_timeout"]
    handlers:
      - type: "pattern"
        pattern: "."
        description: "Any input returns to initial state"
        action: {}
        next_state: "initial"

  error:
    description: "Error state after invalid input"
    timeout: 3000
    on_enter: ["play_error"]
    handlers:
      - type: "pattern"
        pattern: "."
        description: "Any input returns to initial state"
        action: {}
        next_state: "initial"

# Transformers for converting input
transformers:
  minutes_from_digits:
    type: "int"
    description: "Convert digit sequence to minutes"
    
  temperature_from_digits:
    type: "int"
    description: "Extract temperature from sequence"
    min: 60
    max: 85

# Audio responses
responses:
  timer_created:
    template: "Timer set for {minutes} minutes"
  
  lights_on:
    text: "Lights turned on"
    
  lights_off:
    text: "Lights turned off"
    
  temperature_set:
    template: "Temperature set to {temperature} degrees"
    
  ready:
    text: "Ready for command"
    
  error:
    text: "Invalid command sequence"
    
  timeout:
    text: "Command timeout"
